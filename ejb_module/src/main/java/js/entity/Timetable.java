package js.entity;

// Generated 17.03.2013 12:45:30 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Timetable generated by hbm2java
 */
@Entity
@Table(name = "timetable")
public class Timetable implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	private Long id;
	private Stations stationsByArrivalStationId;
	private Stations stationsByDepartureStationId;
	private Trains trains;
	private Date departureTime;
	private Date arrivalTime;
	private Set<Tickets> tickets = new HashSet<Tickets>(0);

	public Timetable() {
	}

	public Timetable(Stations stationsByArrivalStationId,
			Stations stationsByDepartureStationId, Trains trains,
			Date departureTime, Date arrivalTime) {
		this.stationsByArrivalStationId = stationsByArrivalStationId;
		this.stationsByDepartureStationId = stationsByDepartureStationId;
		this.trains = trains;
		this.departureTime = departureTime;
		this.arrivalTime = arrivalTime;
	}

	public Timetable(Stations stationsByArrivalStationId,
			Stations stationsByDepartureStationId, Trains trains,
			Date departureTime, Date arrivalTime, Set<Tickets> tickets) {
		this.stationsByArrivalStationId = stationsByArrivalStationId;
		this.stationsByDepartureStationId = stationsByDepartureStationId;
		this.trains = trains;
		this.departureTime = departureTime;
		this.arrivalTime = arrivalTime;
		this.tickets = tickets;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "arrival_station_id", nullable = false)
	public Stations getStationsByArrivalStationId() {
		return this.stationsByArrivalStationId;
	}

	public void setStationsByArrivalStationId(
			Stations stationsByArrivalStationId) {
		this.stationsByArrivalStationId = stationsByArrivalStationId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "departure_station_id", nullable = false)
	public Stations getStationsByDepartureStationId() {
		return this.stationsByDepartureStationId;
	}

	public void setStationsByDepartureStationId(
			Stations stationsByDepartureStationId) {
		this.stationsByDepartureStationId = stationsByDepartureStationId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "train_id", nullable = false)
	public Trains getTrains() {
		return this.trains;
	}

	public void setTrains(Trains trains) {
		this.trains = trains;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "departure_time", nullable = false, length = 8)
	public Date getDepartureTime() {
		return this.departureTime;
	}

	public void setDepartureTime(Date departureTime) {
		this.departureTime = departureTime;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "arrival_time", nullable = false, length = 8)
	public Date getArrivalTime() {
		return this.arrivalTime;
	}

	public void setArrivalTime(Date arrivalTime) {
		this.arrivalTime = arrivalTime;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "timetable")
	public Set<Tickets> getTickets() {
		return this.tickets;
	}

	public void setTickets(Set<Tickets> tickets) {
		this.tickets = tickets;
	}
}
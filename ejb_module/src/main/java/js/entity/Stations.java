package js.entity;

// Generated 17.03.2013 12:45:30 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Stations generated by hbm2java
 */
@Entity
@Table(name = "stations", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class Stations implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	private Long id;
	private String name;
	private Set<Timetable> timetablesForDepartureStationId = new HashSet<Timetable>(
			0);
	private Set<Timetable> timetablesForArrivalStationId = new HashSet<Timetable>(
			0);

	public Stations() {
	}

	public Stations(String name) {
		this.name = name;
	}

	public Stations(String name,
			Set<Timetable> timetablesForDepartureStationId,
			Set<Timetable> timetablesForArrivalStationId) {
		this.name = name;
		this.timetablesForDepartureStationId = timetablesForDepartureStationId;
		this.timetablesForArrivalStationId = timetablesForArrivalStationId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "name", unique = true, nullable = false, length = 32)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "stationsByDepartureStationId")
	public Set<Timetable> getTimetablesForDepartureStationId() {
		return this.timetablesForDepartureStationId;
	}

	public void setTimetablesForDepartureStationId(
			Set<Timetable> timetablesForDepartureStationId) {
		this.timetablesForDepartureStationId = timetablesForDepartureStationId;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "stationsByArrivalStationId")
	public Set<Timetable> getTimetablesForArrivalStationId() {
		return this.timetablesForArrivalStationId;
	}

	public void setTimetablesForArrivalStationId(
			Set<Timetable> timetablesForArrivalStationId) {
		this.timetablesForArrivalStationId = timetablesForArrivalStationId;
	}

}
